{"ast":null,"code":"var _jsxFileName = \"/home/mr_tross/Fullstack/torelax/src/components/ActivitiesFrame/ChangingElem/ChangingElemFrame/ChangingElemFrame.js\";\nimport React from 'react';\nimport styles from './index.module.css';\nimport Input from '../../../Input/Input';\nimport RatingInput from '../../ActivitiesElem/Star/RatingInput';\nimport Text from '../../../Text/Text';\nimport { connect } from 'react-redux';\nimport { fetchCHANGECATEGORY, fetchCHANGEDESCRIPTION, fetchCHANGEDURATION, fetchCHANGENAME } from '../../../../actions/activities/changingElem';\nimport ChoosingCategory from '../../ChoosingCategory/ChoosingCategory';\nimport TimeInput from '../../../TimeInput/TimeInput';\nimport Button from '../../../Button/Button';\n\nfunction ChangingElemFrame(props) {\n  console.log(props.full);\n  let color;\n\n  switch (props.category) {\n    case \"active\":\n      color = '#8797EB';\n      break;\n\n    case \"collective\":\n      color = '#6FCF97';\n      break;\n\n    case \"outdoors\":\n      color = '#BB6BD9';\n      break;\n\n    default:\n      color = '#65e0b5';\n  }\n\n  let changeCategory = category => {\n    props.dispatch(fetchCHANGECATEGORY(category));\n  };\n\n  let changeName = name => {\n    props.dispatch(fetchCHANGENAME(name));\n  };\n\n  let changeDuration = duration => {\n    props.dispatch(fetchCHANGEDURATION(duration));\n  };\n\n  let changeDescription = description => {\n    props.dispatch(fetchCHANGEDESCRIPTION(description));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.frame,\n    style: {\n      border: '0.5vh solid',\n      borderColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.brow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter name\",\n    inputStyle: 1,\n    onChange: event => {\n      changeName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(RatingInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.brow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textStyle: 3,\n    color_name: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Choose category:\"), /*#__PURE__*/React.createElement(ChoosingCategory, {\n    category: props.category,\n    changeCategory: changeCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textStyle: 3,\n    color_name: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Enter activity duration:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.timeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimeInput, {\n    onChange: event => {\n      changeDuration(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textStyle: 3,\n    color_name: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Enter description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: styles.textArea,\n    onChange: event => {\n      changeDescription(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.last_brow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    buttonStyle: 1,\n    onClick: () => {\n      props.setChanging({\n        flg: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    buttonStyle: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nconst mapStateToProps = store => {\n  return {\n    category: store.category,\n    full: store\n  };\n};\n\nexport default connect(mapStateToProps)(ChangingElemFrame);","map":{"version":3,"sources":["/home/mr_tross/Fullstack/torelax/src/components/ActivitiesFrame/ChangingElem/ChangingElemFrame/ChangingElemFrame.js"],"names":["React","styles","Input","RatingInput","Text","connect","fetchCHANGECATEGORY","fetchCHANGEDESCRIPTION","fetchCHANGEDURATION","fetchCHANGENAME","ChoosingCategory","TimeInput","Button","ChangingElemFrame","props","console","log","full","color","category","changeCategory","dispatch","changeName","name","changeDuration","duration","changeDescription","description","frame","border","borderColor","brow","event","target","value","timeInput","textArea","last_brow","setChanging","flg","mapStateToProps","store"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './index.module.css';\nimport Input from '../../../Input/Input'\nimport RatingInput from '../../ActivitiesElem/Star/RatingInput';\nimport Text from '../../../Text/Text'\nimport {connect} from 'react-redux'\nimport {fetchCHANGECATEGORY, fetchCHANGEDESCRIPTION, fetchCHANGEDURATION, fetchCHANGENAME} from '../../../../actions/activities/changingElem'\nimport ChoosingCategory from '../../ChoosingCategory/ChoosingCategory';\nimport TimeInput from '../../../TimeInput/TimeInput'\nimport Button from '../../../Button/Button'\n\n\nfunction ChangingElemFrame(props) {\n    console.log(props.full)\n    let color;\n    switch (props.category) {\n        case \"active\":\n            color = '#8797EB';\n            break;\n        case \"collective\":\n            color = '#6FCF97';\n            break;\n        case \"outdoors\":\n            color = '#BB6BD9';\n            break;\n        default:\n            color = '#65e0b5';    \n    }\n    let changeCategory = (category) => {\n        props.dispatch(fetchCHANGECATEGORY(category))\n    }\n\n    let changeName = (name) => {\n        props.dispatch(fetchCHANGENAME(name))\n    }\n\n    let changeDuration = (duration) => {\n        props.dispatch(fetchCHANGEDURATION(duration))\n    }\n    let changeDescription = (description) => {\n        props.dispatch(fetchCHANGEDESCRIPTION(description))\n    }\n    return (\n        <div className = {styles.frame} style={{border: '0.5vh solid', borderColor: color}}>\n            <div className = {styles.brow}>\n                <Input placeholder=\"Enter name\" inputStyle = {1} onChange = {(event) => {\n                    changeName(event.target.value)\n                }}/>\n                <RatingInput></RatingInput>\n            </div>\n            <div className = {styles.brow}>\n                <div>\n                    <Text textStyle = {3} color_name = {\"gray\"}>Choose category:</Text>\n                    <ChoosingCategory category = {props.category} changeCategory = {changeCategory}/>\n                </div>\n                <div>\n                    <Text textStyle = {3} color_name = {\"gray\"}>Enter activity duration:</Text>\n                    <div className = {styles.timeInput}>\n                        <TimeInput onChange = {(event) => {\n                            changeDuration(event.target.value)\n                        }}></TimeInput>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Text textStyle = {3} color_name = {\"gray\"}>Enter description:</Text>\n                <textarea className = {styles.textArea} onChange = {(event) => {\n                            changeDescription(event.target.value)\n                        }}></textarea>\n            </div>    \n            <div className = {styles.last_brow}>\n                <Button buttonStyle={1} onClick = {() => {props.setChanging({flg: false})}}>Cancel</Button>\n                <Button buttonStyle={1}>Submit</Button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {category: store.category,\n            full: store}\n}\n\nexport default connect(mapStateToProps)(ChangingElemFrame)\n"]},"metadata":{},"sourceType":"module"}