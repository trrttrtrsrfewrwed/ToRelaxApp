{"ast":null,"code":"var _jsxFileName = \"/home/mr_tross/Fullstack/torelax/src/components/TimeInput/TimeInput.js\";\nimport React, { useState } from 'react';\nimport styles from \"./index.module.css\";\n\nfunction TimeInput() {\n  const [prev_value, setPrevValue] = useState(\"\");\n\n  let checkCorrectness = str => {\n    for (var i = 0; i < str.length; i++) {\n      sym = str.charAt(i);\n\n      if (i === 2 && sym !== ':') {\n        return false;\n      }\n\n      if (i !== 2 && (sym < '0' || sym > '9')) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const addHandler = (prev_value, setPrevValue, event) => {\n    event.preventDefault();\n    let value_ = event.target.value;\n\n    if (checkCorrectness(!value_)) {\n      event.target.value = prev_value;\n    } else {\n      if (value_.length === 2) {\n        if (prev_value.length < 2) {\n          value_ += \":\";\n        } else {\n          value_ = value_[0];\n        }\n      }\n\n      if (value_.length > 4) {\n        value_ = value_.substring(0, 5);\n      }\n\n      setPrevValue(value_);\n      event.target.value = value_;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"00:00\",\n    onInput: event => addHandler(prev_value, setPrevValue, event),\n    pattern: \"^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default TimeInput;","map":{"version":3,"sources":["/home/mr_tross/Fullstack/torelax/src/components/TimeInput/TimeInput.js"],"names":["React","useState","styles","TimeInput","prev_value","setPrevValue","checkCorrectness","str","i","length","sym","charAt","addHandler","event","preventDefault","value_","target","value","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAIA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BJ,QAAQ,CAAC,EAAD,CAA3C;;AACA,MAAIK,gBAAgB,GAAIC,GAAD,IAAS;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCE,MAAAA,GAAG,GAAGH,GAAG,CAACI,MAAJ,CAAWH,CAAX,CAAN;;AACA,UAAIA,CAAC,KAAK,CAAN,IAAWE,GAAG,KAAK,GAAvB,EAA4B;AACxB,eAAO,KAAP;AACH;;AACD,UAAIF,CAAC,KAAK,CAAN,KAAYE,GAAG,GAAG,GAAN,IAAaA,GAAG,GAAG,GAA/B,CAAJ,EAAyC;AACrC,eAAO,KAAP;AACH;AACF;;AACH,WAAO,IAAP;AACH,GAXD;;AAaA,QAAME,UAAU,GAAG,CAACR,UAAD,EAAaC,YAAb,EAA2BQ,KAA3B,KAAqC;AACpDA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA1B;;AACA,QAAIX,gBAAgB,CAAC,CAACS,MAAF,CAApB,EAA+B;AAC3BF,MAAAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqBb,UAArB;AACH,KAFD,MAEO;AACH,UAAIW,MAAM,CAACN,MAAP,KAAkB,CAAtB,EAAyB;AACrB,YAAIL,UAAU,CAACK,MAAX,GAAoB,CAAxB,EAA2B;AACvBM,UAAAA,MAAM,IAAI,GAAV;AACH,SAFD,MAEO;AACHA,UAAAA,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;AACH;AACJ;;AACD,UAAIA,MAAM,CAACN,MAAP,GAAgB,CAApB,EAAuB;AACnBM,QAAAA,MAAM,GAAGA,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAT;AACH;;AACDb,MAAAA,YAAY,CAACU,MAAD,CAAZ;AACAF,MAAAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqBF,MAArB;AACH;AACJ,GAnBD;;AAoBA,sBACI;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,OAAO,EAAGF,KAAD,IAAWD,UAAU,CAACR,UAAD,EAAaC,YAAb,EAA2BQ,KAA3B,CAFlC;AAGI,IAAA,OAAO,EAAC,qCAHZ;AAGkD,IAAA,QAAQ,MAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;;AAED,eAAeV,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from \"./index.module.css\"\n\n\n\nfunction TimeInput() {\n    const [prev_value, setPrevValue] = useState(\"\");\n    let checkCorrectness = (str) => {\n        for (var i = 0; i < str.length; i++) {\n            sym = str.charAt(i)\n            if (i === 2 && sym !== ':') {\n                return false;\n            }\n            if (i !== 2 && (sym < '0' || sym > '9')) {\n                return false;\n            }\n          }\n        return true;  \n    }\n\n    const addHandler = (prev_value, setPrevValue, event) => {\n        event.preventDefault();\n        let value_ = event.target.value;\n        if (checkCorrectness(!value_)) {\n            event.target.value = prev_value\n        } else {\n            if (value_.length === 2) {\n                if (prev_value.length < 2) {\n                    value_ += \":\";\n                } else {\n                    value_ = value_[0];\n                }\n            }\n            if (value_.length > 4) {\n                value_ = value_.substring(0, 5);\n            }\n            setPrevValue(value_);\n            event.target.value = value_;\n        }\n    }\n    return (\n        <input\n            placeholder=\"00:00\"\n            onInput={(event) => addHandler(prev_value, setPrevValue, event)}\n            pattern=\"^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$\" required>\n        </input>\n    )\n}\n\nexport default TimeInput;"]},"metadata":{},"sourceType":"module"}