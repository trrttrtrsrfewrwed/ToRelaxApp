{"ast":null,"code":"import userService from '../../userService/index';\n\nfunction fetchStart() {\n  return {\n    type: 'USER_FETCHING'\n  };\n}\n\nfunction fetchFail(payload) {\n  return {\n    type: 'USER_FAIL',\n    payload\n  };\n}\n\nexport function fetchSuccess(payload) {\n  return {\n    type: 'USER_SUCCESS',\n    payload\n  };\n}\nexport function loginAction(email, password) {\n  return dispatch => {\n    dispatch(fetchStart());\n    return userService.login(email, password).then(data => {\n      dispatch(fetchSuccess(data));\n      console.log('0');\n    }).catch(error => {\n      dispatch(fetchFail(error));\n      throw Error(error);\n    });\n  };\n}\nexport function signupAction(user, password) {\n  return dispatch => {\n    dispatch(fetchStart());\n    return userService.signup(user, password).then(res => {\n      console.log(\"successful signup\", res);\n      let addedUser = res.data;\n      dispatch(fetchSuccess({\n        user: {\n          login: addedUser.name,\n          email: addedUser.email\n        },\n        data: JSON.parse(addedUser.data)\n      }));\n    }).catch(error => {\n      console.log(\"signup err\", error);\n      dispatch(fetchFail(error));\n      throw Error(error);\n    });\n  };\n}\nexport function setDataAction(data, email) {\n  return dispatch => {\n    dispatch(fetchStart());\n    return userService.setdata(data, email).then(data => {\n      dispatch(fetchSuccess(data));\n    }).catch(error => {\n      dispatch(fetchFail(error));\n      throw Error(error);\n    });\n  };\n}","map":{"version":3,"sources":["/home/mr_tross/Fullstack/torelax/src/actions/user/user.js"],"names":["userService","fetchStart","type","fetchFail","payload","fetchSuccess","loginAction","email","password","dispatch","login","then","data","console","log","catch","error","Error","signupAction","user","signup","res","addedUser","name","JSON","parse","setDataAction","setdata"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;;AAED,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAE,WADD;AAELE,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,YAAT,CAAsBD,OAAtB,EAA+B;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAE,cADD;AAELE,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AAEA,WAAOD,WAAW,CAACU,KAAZ,CAAkBH,KAAlB,EAAyBC,QAAzB,EAAmCG,IAAnC,CAAyCC,IAAD,IAAU;AACvDH,MAAAA,QAAQ,CAACJ,YAAY,CAACO,IAAD,CAAb,CAAR;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KAJM,EAKJC,KALI,CAKGC,KAAD,IAAW;AAChBP,MAAAA,QAAQ,CAACN,SAAS,CAACa,KAAD,CAAV,CAAR;AACA,YAAMC,KAAK,CAACD,KAAD,CAAX;AACD,KARI,CAAP;AASD,GAZD;AAaD;AAED,OAAO,SAASE,YAAT,CAAsBC,IAAtB,EAA4BX,QAA5B,EAAsC;AAC3C,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AAEA,WAAOD,WAAW,CAACoB,MAAZ,CAAmBD,IAAnB,EAAyBX,QAAzB,EAAmCG,IAAnC,CAAyCU,GAAD,IAAS;AACtDR,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC;AACA,UAAIC,SAAS,GAAGD,GAAG,CAACT,IAApB;AACAH,MAAAA,QAAQ,CAACJ,YAAY,CAAC;AAACc,QAAAA,IAAI,EAAE;AAACT,UAAAA,KAAK,EAAEY,SAAS,CAACC,IAAlB;AAAwBhB,UAAAA,KAAK,EAAEe,SAAS,CAACf;AAAzC,SAAP;AAAwDK,QAAAA,IAAI,EAAEY,IAAI,CAACC,KAAL,CAAWH,SAAS,CAACV,IAArB;AAA9D,OAAD,CAAb,CAAR;AACD,KAJM,EAKJG,KALI,CAKGC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAA1B;AACAP,MAAAA,QAAQ,CAACN,SAAS,CAACa,KAAD,CAAV,CAAR;AACA,YAAMC,KAAK,CAACD,KAAD,CAAX;AACD,KATI,CAAP;AAUD,GAbD;AAcD;AAED,OAAO,SAASU,aAAT,CAAuBd,IAAvB,EAA6BL,KAA7B,EAAoC;AACzC,SAAOE,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AAEA,WAAOD,WAAW,CAAC2B,OAAZ,CAAoBf,IAApB,EAA0BL,KAA1B,EAAiCI,IAAjC,CAAuCC,IAAD,IAAU;AACrDH,MAAAA,QAAQ,CAACJ,YAAY,CAACO,IAAD,CAAb,CAAR;AACD,KAFM,EAGJG,KAHI,CAGGC,KAAD,IAAW;AAChBP,MAAAA,QAAQ,CAACN,SAAS,CAACa,KAAD,CAAV,CAAR;AACA,YAAMC,KAAK,CAACD,KAAD,CAAX;AACD,KANI,CAAP;AAOD,GAVD;AAWD","sourcesContent":["import userService from '../../userService/index'\n\nfunction fetchStart() {\n  return {\n    type: 'USER_FETCHING'\n  }\n}\n\nfunction fetchFail(payload) {\n  return {\n    type: 'USER_FAIL',\n    payload\n  }\n}\n\nexport function fetchSuccess(payload) {\n  return {\n    type: 'USER_SUCCESS',\n    payload\n  }\n}\n\nexport function loginAction(email, password) {\n  return dispatch => {\n    dispatch(fetchStart());\n\n    return userService.login(email, password).then((data) => {\n      dispatch(fetchSuccess(data))\n\n      console.log('0')\n    })\n      .catch((error) => {\n        dispatch(fetchFail(error))\n        throw Error(error)\n      })\n  }\n}\n\nexport function signupAction(user, password) {\n  return dispatch => {\n    dispatch(fetchStart());\n\n    return userService.signup(user, password).then((res) => {\n      console.log(\"successful signup\", res);\n      let addedUser = res.data;\n      dispatch(fetchSuccess({user: {login: addedUser.name, email: addedUser.email}, data: JSON.parse(addedUser.data)}))\n    })\n      .catch((error) => {\n        console.log(\"signup err\", error)\n        dispatch(fetchFail(error))\n        throw Error(error)\n      })\n  }\n}\n\nexport function setDataAction(data, email) {\n  return dispatch => {\n    dispatch(fetchStart());\n\n    return userService.setdata(data, email).then((data) => {\n      dispatch(fetchSuccess(data))\n    })\n      .catch((error) => {\n        dispatch(fetchFail(error))\n        throw Error(error)\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}