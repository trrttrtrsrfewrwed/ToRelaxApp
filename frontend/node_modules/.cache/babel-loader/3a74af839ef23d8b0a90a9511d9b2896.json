{"ast":null,"code":"const initialState = [{\n  id: 1,\n  name: \"Пошутить\",\n  category: \"outdoors\",\n  description: \"Смешно пошутить\",\n  time: \"12:22\",\n  rating: 4,\n  minimized: true\n}];\n\nconst activitiesListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'MAXIMIZE':\n      return state.map(elem => {\n        if (elem.id === action.id) {\n          elem.minimized = false;\n        } else {\n          elem.minimized = true;\n        }\n\n        return elem;\n      });\n\n    case 'MINIMIZE':\n      return state.map(elem => {\n        if (elem.id === action.id) {\n          elem.minimized = true;\n        }\n\n        return elem;\n      });\n\n    case 'REMOVE':\n      return state.filter(elem => elem.id !== action.id);\n\n    case 'SET':\n      let flg = false;\n      let tmp = state.map(elem => {\n        if (elem.id === action.id) {\n          console.log('Changing elem...');\n          flg = true;\n          return {\n            id: action.id,\n            name: action.data.name,\n            category: action.data.category,\n            description: action.data.description,\n            time: action.data.duration,\n            rating: action.data.rating,\n            minimized: true\n          };\n        }\n\n        return elem;\n      });\n\n      if (!flg) {\n        return [...state, {\n          id: action.id,\n          name: action.data.name,\n          category: action.data.category,\n          description: action.data.description,\n          time: action.data.duration,\n          rating: action.data.rating,\n          minimized: true\n        }];\n      } else {\n        return tmp;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default activitiesListReducer;","map":{"version":3,"sources":["/home/mr_tross/Fullstack/torelax/src/reducers/activities/activitiesList.js"],"names":["initialState","id","name","category","description","time","rating","minimized","activitiesListReducer","state","action","type","map","elem","filter","flg","tmp","console","log","data","duration"],"mappings":"AACA,MAAMA,YAAY,GAAI,CAAC;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,IAAI,EAAE,UAFa;AAGnBC,EAAAA,QAAQ,EAAE,UAHS;AAInBC,EAAAA,WAAW,EAAE,iBAJM;AAKnBC,EAAAA,IAAI,EAAE,OALa;AAMnBC,EAAAA,MAAM,EAAE,CANW;AAOnBC,EAAAA,SAAS,EAAE;AAPQ,CAAD,CAAtB;;AAUE,MAAMC,qBAAqB,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACrB,YAAIA,IAAI,CAACZ,EAAL,KAAYS,MAAM,CAACT,EAAvB,EAA2B;AACzBY,UAAAA,IAAI,CAACN,SAAL,GAAiB,KAAjB;AACD,SAFD,MAEO;AACLM,UAAAA,IAAI,CAACN,SAAL,GAAiB,IAAjB;AACD;;AACD,eAAOM,IAAP;AACD,OAPM,CAAP;;AAQF,SAAK,UAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACrB,YAAIA,IAAI,CAACZ,EAAL,KAAYS,MAAM,CAACT,EAAvB,EAA2B;AACzBY,UAAAA,IAAI,CAACN,SAAL,GAAiB,IAAjB;AACD;;AACD,eAAOM,IAAP;AACD,OALM,CAAP;;AAMF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAaD,IAAI,IAAKA,IAAI,CAACZ,EAAL,KAAYS,MAAM,CAACT,EAAzC,CAAP;;AACF,SAAK,KAAL;AACE,UAAIc,GAAG,GAAG,KAAV;AACA,UAAIC,GAAG,GAAGP,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACxB,YAAIA,IAAI,CAACZ,EAAL,KAAYS,MAAM,CAACT,EAAvB,EAA2B;AACzBgB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,UAAAA,GAAG,GAAG,IAAN;AACA,iBAAO;AACLd,YAAAA,EAAE,EAAES,MAAM,CAACT,EADN;AAELC,YAAAA,IAAI,EAAEQ,MAAM,CAACS,IAAP,CAAYjB,IAFb;AAGLC,YAAAA,QAAQ,EAAEO,MAAM,CAACS,IAAP,CAAYhB,QAHjB;AAILC,YAAAA,WAAW,EAAEM,MAAM,CAACS,IAAP,CAAYf,WAJpB;AAKLC,YAAAA,IAAI,EAAEK,MAAM,CAACS,IAAP,CAAYC,QALb;AAMLd,YAAAA,MAAM,EAAEI,MAAM,CAACS,IAAP,CAAYb,MANf;AAOLC,YAAAA,SAAS,EAAE;AAPN,WAAP;AASD;;AACD,eAAOM,IAAP;AACD,OAfS,CAAV;;AAgBA,UAAI,CAACE,GAAL,EAAU;AACR,eAAO,CACL,GAAGN,KADE,EAEL;AACER,UAAAA,EAAE,EAAES,MAAM,CAACT,EADb;AAEEC,UAAAA,IAAI,EAAEQ,MAAM,CAACS,IAAP,CAAYjB,IAFpB;AAGEC,UAAAA,QAAQ,EAAEO,MAAM,CAACS,IAAP,CAAYhB,QAHxB;AAIEC,UAAAA,WAAW,EAAEM,MAAM,CAACS,IAAP,CAAYf,WAJ3B;AAKEC,UAAAA,IAAI,EAAEK,MAAM,CAACS,IAAP,CAAYC,QALpB;AAMEd,UAAAA,MAAM,EAAEI,MAAM,CAACS,IAAP,CAAYb,MANtB;AAOEC,UAAAA,SAAS,EAAE;AAPb,SAFK,CAAP;AAYD,OAbD,MAaO;AACL,eAAOS,GAAP;AACD;;AACH;AACE,aAAOP,KAAP;AAtDJ;AAwDD,CAzDD;;AA2DA,eAAeD,qBAAf","sourcesContent":["\nconst initialState =  [{\n    id: 1,\n    name: \"Пошутить\",\n    category: \"outdoors\",\n    description: \"Смешно пошутить\",\n    time: \"12:22\",\n    rating: 4,\n    minimized: true\n  }];\n  \n  const activitiesListReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'MAXIMIZE':\n        return state.map(elem=>{\n          if (elem.id === action.id) {\n            elem.minimized = false;\n          } else {\n            elem.minimized = true;\n          }\n          return elem;\n        })\n      case 'MINIMIZE':\n        return state.map(elem=>{\n          if (elem.id === action.id) {\n            elem.minimized = true;\n          } \n          return elem;\n        })\n      case 'REMOVE':\n        return state.filter(elem => (elem.id !== action.id))  \n      case 'SET':\n        let flg = false;\n        let tmp = state.map(elem=>{\n          if (elem.id === action.id) {\n            console.log('Changing elem...')\n            flg = true;\n            return {\n              id: action.id,\n              name: action.data.name,\n              category: action.data.category,\n              description: action.data.description,\n              time: action.data.duration,\n              rating: action.data.rating,\n              minimized: true\n            }\n          } \n          return elem;\n        }) \n        if (!flg) {\n          return [\n            ...state,\n            {\n              id: action.id,\n              name: action.data.name,\n              category: action.data.category,\n              description: action.data.description,\n              time: action.data.duration,\n              rating: action.data.rating,\n              minimized: true\n            }\n          ]\n        } else {\n          return tmp;\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default activitiesListReducer"]},"metadata":{},"sourceType":"module"}