{"ast":null,"code":"const activitiesListReducer = (state, action) => {\n  switch (action.type) {\n    case 'MAXIMIZE':\n      return state.map(elem => {\n        if (elem.id === action.id) {\n          elem.minimized = false;\n        } else {\n          elem.minimized = true;\n        }\n\n        return elem;\n      });\n\n    case 'MINIMIZE':\n      return state.map(elem => {\n        if (elem.id === action.id) {\n          elem.minimized = true;\n        }\n\n        return elem;\n      });\n\n    case 'REMOVE':\n      return state.filter(elem => elem.id !== action.id);\n\n    case 'SET':\n      let flg = false;\n      let tmp = state.map(elem => {\n        if (elem.id === action.id) {\n          flg = true;\n          return {\n            id: action.id,\n            name: action.data.name,\n            category: action.data.category,\n            description: action.data.description,\n            time: action.data.duration,\n            rating: action.data.rating,\n            minimized: true\n          };\n        }\n\n        return elem;\n      });\n\n      if (!flg) {\n        return [...state, {\n          id: action.id,\n          name: action.data.name,\n          category: action.data.category,\n          description: action.data.description,\n          time: action.data.duration,\n          rating: action.data.rating,\n          minimized: true\n        }];\n      } else {\n        return tmp;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default activitiesListReducer;","map":{"version":3,"sources":["/home/mr_tross/Fullstack/torelax/src/reducers/activities/activitiesList.js"],"names":["activitiesListReducer","state","action","type","map","elem","id","minimized","filter","flg","tmp","name","data","category","description","time","duration","rating"],"mappings":"AACE,MAAMA,qBAAqB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzBD,UAAAA,IAAI,CAACE,SAAL,GAAiB,KAAjB;AACD,SAFD,MAEO;AACLF,UAAAA,IAAI,CAACE,SAAL,GAAiB,IAAjB;AACD;;AACD,eAAOF,IAAP;AACD,OAPM,CAAP;;AAQF,SAAK,UAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzBD,UAAAA,IAAI,CAACE,SAAL,GAAiB,IAAjB;AACD;;AACD,eAAOF,IAAP;AACD,OALM,CAAP;;AAMF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACO,MAAN,CAAaH,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAzC,CAAP;;AACF,SAAK,KAAL;AACE,UAAIG,GAAG,GAAG,KAAV;AACA,UAAIC,GAAG,GAAGT,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACxB,YAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzBG,UAAAA,GAAG,GAAG,IAAN;AACA,iBAAO;AACLH,YAAAA,EAAE,EAAEJ,MAAM,CAACI,EADN;AAELK,YAAAA,IAAI,EAAET,MAAM,CAACU,IAAP,CAAYD,IAFb;AAGLE,YAAAA,QAAQ,EAAEX,MAAM,CAACU,IAAP,CAAYC,QAHjB;AAILC,YAAAA,WAAW,EAAEZ,MAAM,CAACU,IAAP,CAAYE,WAJpB;AAKLC,YAAAA,IAAI,EAAEb,MAAM,CAACU,IAAP,CAAYI,QALb;AAMLC,YAAAA,MAAM,EAAEf,MAAM,CAACU,IAAP,CAAYK,MANf;AAOLV,YAAAA,SAAS,EAAE;AAPN,WAAP;AASD;;AACD,eAAOF,IAAP;AACD,OAdS,CAAV;;AAeA,UAAI,CAACI,GAAL,EAAU;AACR,eAAO,CACL,GAAGR,KADE,EAEL;AACEK,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEK,UAAAA,IAAI,EAAET,MAAM,CAACU,IAAP,CAAYD,IAFpB;AAGEE,UAAAA,QAAQ,EAAEX,MAAM,CAACU,IAAP,CAAYC,QAHxB;AAIEC,UAAAA,WAAW,EAAEZ,MAAM,CAACU,IAAP,CAAYE,WAJ3B;AAKEC,UAAAA,IAAI,EAAEb,MAAM,CAACU,IAAP,CAAYI,QALpB;AAMEC,UAAAA,MAAM,EAAEf,MAAM,CAACU,IAAP,CAAYK,MANtB;AAOEV,UAAAA,SAAS,EAAE;AAPb,SAFK,CAAP;AAYD,OAbD,MAaO;AACL,eAAOG,GAAP;AACD;;AACH;AACE,aAAOT,KAAP;AArDJ;AAuDD,CAxDD;;AA0DA,eAAeD,qBAAf","sourcesContent":["\n  const activitiesListReducer = (state, action) => {\n    switch (action.type) {\n      case 'MAXIMIZE':\n        return state.map(elem=>{\n          if (elem.id === action.id) {\n            elem.minimized = false;\n          } else {\n            elem.minimized = true;\n          }\n          return elem;\n        })\n      case 'MINIMIZE':\n        return state.map(elem=>{\n          if (elem.id === action.id) {\n            elem.minimized = true;\n          } \n          return elem;\n        })\n      case 'REMOVE':\n        return state.filter(elem => (elem.id !== action.id))  \n      case 'SET':\n        let flg = false;\n        let tmp = state.map(elem=>{\n          if (elem.id === action.id) {\n            flg = true;\n            return {\n              id: action.id,\n              name: action.data.name,\n              category: action.data.category,\n              description: action.data.description,\n              time: action.data.duration,\n              rating: action.data.rating,\n              minimized: true\n            }\n          } \n          return elem;\n        }) \n        if (!flg) {\n          return [\n            ...state,\n            {\n              id: action.id,\n              name: action.data.name,\n              category: action.data.category,\n              description: action.data.description,\n              time: action.data.duration,\n              rating: action.data.rating,\n              minimized: true\n            }\n          ]\n        } else {\n          return tmp;\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export default activitiesListReducer"]},"metadata":{},"sourceType":"module"}